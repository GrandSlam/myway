load 'deploy' if respond_to?(:namespace)

set :domain, "your application domain"
set :application, "<%= name %>"

set :scm, :git
# Or: `accurev`, `bzr`, `cvs`, `darcs`, `git`, `mercurial`, `perforce`, `subversion` or `none`

set :repository,  "git@github.com:some-user/<%= name %>.git"

set :deploy_via, :remote_cache
set :deploy_to, "/var/www/#{application}"
set :user, "your deployment user"
set :use_sudo, false


role :web, domain                         # Your HTTP server, Apache/etc
role :app, domain                         # This may be the same as your `Web` server
role :db,  domain, :primary => true       # This is where Rails migrations will run

# if you want to clean up old releases on each deploy uncomment this:
# after "deploy:restart", "deploy:cleanup"

# If you are using Passenger mod_rails uncomment this:
# namespace :deploy do
#   task :start do ; end
#   task :stop do ; end
#   task :restart, :roles => :app, :except => { :no_release => true } do
#     run "#{try_sudo} touch #{File.join(current_path,'tmp','restart.txt')}"
#   end
# end
#set :sin_env, :production

# Where will it be located on a server?

#set :unicorn_conf, "#{deploy_to}/config/unicorn.rb"
#set :unicorn_pid, "#{deploy_to}/pids/unicorn.pid"

# Unicorn control tasks
#namespace :deploy do
#  task :restart do
#    run "if [ -f #{unicorn_pid} ]; then kill -USR2 `cat #{unicorn_pid}`; else cd #{deploy_to} && bundle exec unicorn -c #{unicorn_conf} -E #{sin_env} -D; fi"
#  end
#  task :start do
#    run "cd #{deploy_to} && bundle exec unicorn -c #{unicorn_conf} -E #{sin_env} -D"
#  end
#  task :stop do
#    run "if [ -f #{unicorn_pid} ]; then kill -QUIT `cat #{unicorn_pid}`; fi"
#  end
#
#end